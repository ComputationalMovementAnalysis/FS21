[["index.html", "Computational Movement Analysis: Patterns and Trends in Environmental Data Master ENR, Spring Semester 2021 Welcome to the course! License", " Computational Movement Analysis: Patterns and Trends in Environmental Data Master ENR, Spring Semester 2021 Patrick Laube, Nils Ratnaweera, Nikolaos Bakogiannis 20 May, 2021 Welcome to the course! For the practical part of the course, building-up skills for analyzing movement data in the software environment R, youll be using data from the ZHAW project Prävention von Wildschweinschäden in der Landwirtschaft. The project investigates the spatiotemporal movement patterns of wild boar (Sus scrofa) in agricultural landscapes. We will study the trajectories of these wild boar, practising the most basic analysis tasks of Computational Movement Analysis (CMA). This video gives a nice introduction into the project License These R Exercises are created by Patrick Laube, Nils Ratnaweera and Nikolaos Bakogiannis for the Course *Computational Movement Analysis\" and are licensed under Creative Commons Attribution 4.0 International License. This work is licensed under a Creative Commons Attribution 4.0 International License. "],["W04_01_exercise.html", "Exercise 4", " Exercise 4 Learning Outcomes* You are able to conceptualize a simple movement pattern and implement data structures and corresponding procedures (lets call them algorithms) for detecting it using R. You understand the sensitivity of movement patterns to pattern parameter thresholds. Prerequisites* Readings Skills from R for Data Science (Wickham and Grolemund 2017): RS4.1 Chap15 Functions (19p, 269-289) Readings Theory, Laube (2014): R4.1 Chap.2, p. 29-58 "],["W04_05_peer_feedback.html", "Peer Feedback", " Peer Feedback For the submissions of the exercises of week 3, you will give each other peer feedback similiar to how you received feedback from us in week 2. Each of you will be assigned a fellow student to provide feedback and will receive feedback from a different student. You will get the URL of the repo that you provide feedback via moodle. Using the URL of the Github Repo to which you will provide feedback, create a new RStudio Project following step 4 we described in week 2: In RStudio, start a new project Choose: File &gt; New Project &gt; Version Control &gt; Git. In the repository URL, paste the URL from your peer This will create a clone of that project on your local machine and open it in RStudio. Try to run the code written by your fellow student locally. TODO: Add more detail on what the students should provide feedback on. Git and Github provide rich functionalities to give feedback on code. We recommend you use issues to deliver your feedback to your peer (in the way we provided feedback in week 2). Using issues you can reference specific lines of code, similar like the comment feature in Microsoft Word. You have two ways to reference of specific line(s): via the browser (on github.com) via our RStudio Addin Option 1 requires no initial set up and is quite straightforward. However, you will need to switch back and forth between RStudio and Github, which can be quite tiresome. Option 2 will require 10 minutes of set up, but should be faster to use afterwards. We therefore recommend this option, however: We developed this addin ourselves and it might not be stable for everyone. Please contact us if it does not work for you. Option 1: via the browser on github.com Open the repos URL in your browser Find and open the R / RMarkdown script containing the code you want to provide feedback on Highlight the lines you want to reference by clicking on the respective line numbers (you can select multiple lines by selecting the first line, holding the shift key and then selecting the last line) Click on the three dots situatied to the left of the first line Choose Reference in new issue. This will create a new issue with a link referencing the specific lines. Add your comment Option 2: via our RStudio addin One time setup: Install devtools (install.packages(\"devtools\")) Install inlineComments from Github (devtools::install_github(\"ratnanil/inlineComments\")) Restart RStudio Click on tools &gt; Modify keyboard shortcuts and add a shortcut for the command Insert inline comment (e.g. Ctrl + Shift + k) Now for each comment, you can highlight the lines you wish to comment and use the keyboard shortcut you assigned in the last step (e.g. Ctrl + Shift + k). This should open a window where you can add your comment and if you hit Create issue, your comments will be added to your fellow students repo and a message will show you a link to the new issue. "],["90_references.html", "References", " References Laube, Patrick. 2014. Computational Movement Analysis. SpringerBriefs in Computer Science. Springer International Publishing. https://books.google.ch/books?id=xMRpBAAAQBAJ. Wickham, Hadley, and Garrett Grolemund. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. 1st ed. OReilly Media, Inc. "]]
